@use 'sass:math';

$utilities: (
  "padding": (
    "prefix": "p",
    "values": $spacers
    ),
  "padding-left": (
    "prefix": "pw",
    "values": $spacers
    ),
  "padding-right": (
    "prefix": "pe",
    "values": $spacers
    ),
  "padding-top": (
    "prefix": "pn",
    "values": $spacers
    ),
  "padding-bottom": (
    "prefix": "ps",
    "values": $spacers
    ),
  "margin": (
    "prefix": "m",
    "values": $spacers
    ),
  "margin-left": (
    "prefix": "ml",
    "values": $spacers
    ),
  "margin-right": (
    "prefix": "mr",
    "values": $spacers
    ),
  "margin-top": (
    "prefix": "mt",
    "values": $spacers
    ),
  "margin-bottom": (
    "prefix": "mb",
    "values": $spacers
    ),

  "opacity": (
    "prefix": "o",
    "values": (
      "10": 0.1,
      "20": 0.2,
      "30": 0.3,
      "40": 0.4,
      "50": 0.5,
      "60": 0.6,
      "70": 0.7,
      "80": 0.8,
      "90": 0.9,
      "100": 1,
    ),
  ),
  "border-radius": (
    "prefix": "br",
    "values": (
      "default": $base-border-radius,
      "none": 0,
      "xs": math.div($base-border-radius, 4),
      "sm": math.div($base-border-radius, 2),
      "lg": $base-border-radius * 2,
      "full": 50%,
    )
  ),
  "display": (
    "prefix": "d",
    "values": (
      "none": none,
      "block": block,
      "flex": flex,
      "inline": inline,
      "inline-block": inline-block
    )
  ),
  "font-size": (
    "prefix": "font",
    "values": $fonts
  ),
);

@each $property, $map in $utilities {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $key, $val in $values {
        @if ($key == "default") {
            .#{$prefix} {
                #{$property}: $val;
            }
        } @else {
            .#{$prefix}-#{$key} {
                #{$property}: $val;
            }
        }
    }
}

$padding-x: (
  "padding-x": (
    "values": $spacers
  )
);

@each $property, $map in $padding-x {
  $values: map-get($map, "values");

  @each $key, $val in $values {
    .px-#{$key} {
    padding-left: $val;
    padding-right: $val;
    }
  }
}

$padding-y: (
  "padding-y": (
    "values": $spacers
  )
);

@each $property, $map in $padding-y {
  $values: map-get($map, "values");

  @each $key, $val in $values {
    .py-#{$key} {
    padding-top: $val;
    padding-bottom: $val;
    }
  }
}